package com.springjpa.example.SpringDataJPA;

import javax.persistence.*;
import java.time.LocalDate;

// entity denotes the fact that our class will be a table
// name is the name of the Code Table and the database by default is the name of the
// class is taken
@Entity(name = "Student")

// Table allows us to configure our table here we indicate that the name of the
// of our unique constraint on email has the name student_email_unique
// otherwise a random name will be generated by default, we also specify the
// constraint
// the singularity of the emails here because it is only in the table annotation that
// that it is possible to define and name the constraint
@Table(name = "student", uniqueConstraints = {
        @UniqueConstraint(name = "student_email_unique",columnNames = "email")
})
public class Student {
    // this annotation is essential it our primary key
    @Id
    // sequenceGenerator allows to do the autoincrement on the id
    // the size allocation is the increment step in each new id
    @SequenceGenerator(
            name = "student_sequence",
            sequenceName  = "student_sequence",
            allocationSize = 1
    )
    @GeneratedValue(
            strategy = GenerationType.SEQUENCE,
            generator = "student_sequence"
    )
    // column allows you to specify the exact name of the database column
    // and other constraint applied to a column
    @Column(
            name = "id",
            updatable = false
    )
    private Long id;

    // columnDefinition allows us to specify the type of column data
    @Column(
            name = "first_name",
            nullable = false,
            columnDefinition = "TEXT"
    )
    private String firstName;

    @Column(
            name = "last_name",
            nullable = false,
            columnDefinition = "TEXT"
    )
    private String lastName;

    // we no longer define the unique constraint here because it is impossible when
    // we define the constraint here to specify its name, so we will prefer to define it
    // in @table
    //@Column (name = "email", nullable = false, columnDefinition = "TEXT", unique = true)
    @Column(
            name = "email",
            nullable = false,
            columnDefinition = "TEXT"
    )
    private String email;

    @Column(
            name = "date_of_birth",
            nullable = false,
            columnDefinition = "DATE"
    )
    private LocalDate dateOfBirth;

    public Student(Long id, String firstName, String lastName, String email, LocalDate dateOfBirth) {
        System.out.println("Inside student");
        this.id = id;
        this.firstName = firstName;
        this.lastName = lastName;
        this.email = email;
        this.dateOfBirth = dateOfBirth;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public LocalDate getDateOfBirth() {
        return dateOfBirth;
    }

    public void setDateOfBirth(LocalDate dateOfBirth) {
        this.dateOfBirth = dateOfBirth;
    }

    @Override
    public String toString() {
        return "Student{" +
                "id=" + id +
                ", firstName='" + firstName + '\'' +
                ", lastName='" + lastName + '\'' +
                ", email='" + email + '\'' +
                ", dateOfBirth=" + dateOfBirth +
                '}';
    }
}
